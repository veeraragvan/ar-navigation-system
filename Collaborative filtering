# Define reader
reader = Reader(rating_scale=(1, 5))
data = Dataset.load_from_df(ratings_df[['user_id', 'poi_id', 'rating']], reader)

# Train-test split
trainset, testset = train_test_split(data, test_size=0.25, random_state=42)

# Model training using SVD
model = SVD()
model.fit(trainset)

# Predict for a specific user
user_id = 'U1'
poi_list = pois_df['poi_id'].tolist()
rated_pois = ratings_df[ratings_df['user_id'] == user_id]['poi_id'].tolist()

# Recommend POIs the user hasn't rated
recommendations = []
for poi in poi_list:
    if poi not in rated_pois:
        pred = model.predict(user_id, poi)
        recommendations.append((poi, pred.est))

# Sort by predicted rating
recommendations.sort(key=lambda x: x[1], reverse=True)

print("Collaborative Filtering Recommendations for", user_id)
for poi, score in recommendations:
    name = pois_df[pois_df['poi_id'] == poi]['name'].values[0]
    print(f"{name} (Predicted Rating: {score:.2f})")
